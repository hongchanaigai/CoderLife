day008 课程回顾

把几个指针流程图,代码过一遍

作业讲解
	1. 默认第一个成员和第二个就是最大和第二大的数
	   从第3个元素开始比较,比max大,max = 此成员, 让smax = max
	   有可能等于max,smax = 此成员
	 
	2. for(i = 0; src[i] != '\0'; ++i)
	   {
			dst[i] = src[i];
		}
		
		//补结束符
		dst[i] = 0;
	 
	 
	 
	 
day009 课堂记录

指针数组,它是数组,每个元素都是指针

数组指针,它是指针,指向数组的指针	 
	 
	 
	 
	 
int b[10][10];

fun(b);

void fun(int b[10][10]); //ok
void fun(int **b); //error,二维数组不是二级指针	 
	 
	 
int *fun(); //返回值是指针类型,指针函数	 
	 
	 
	 
0		数字0,和'\0'等价	 
'0'		字符'0',不是结束符,ascii码为48

char a[] = {'a', 'b'};
printf("%s\n", a); //乱码,没有结束符

char a[10] = {'a', 'b'};
printf("%s\n", a); //正确,后面自动补结束符0	 

char a[] = {'a', 'b', 0};
char a[] = {'a', 'b', '\0'};
printf("%s\n", a); //正常,有结束符
	 
char a[] = {'a', 'b', '0'};
printf("%s\n", a); //乱码,没有结束符

char buf[] = "hello"; //字符串初始化,自动隐藏结束符'\0'



int a[10];

int *p = a; //a是首元素地址,首元素是int

char *b[10];
int **tmp = b; //b是首元素地址,首元素是char *
int **tmp = &b[0];



作业

1. 不使用库函数,编写一个函数my_atoi(),功能和atoi是一样的
	int my_atoi(char *str)
	
	my_atoi("+123"); //结果为十进制的123
	my_atoi("-123"); //结果为十进制的-123
	my_atoi("123"); //结果为十进制的123
	
	提示:字符如何转换为整型:'1' - '0' = 1; '2' - '0' = 2;

2. 
	int main()
	{
		//每个字段都是一个整数,字段的数量随机,字段之间用','分割,求所有整数的和
		char a[100] = "12,43,65,13,97,54,19";
	
		int sum = get_sum(a); //请实现此函数
		printf("sum = %d\n", sum);
	
		return 0;
	}

	提示:strtok()










	 