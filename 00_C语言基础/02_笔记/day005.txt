day004课程回顾:

1)变量和常量
	标识符命名规范:
		字母,数字,下划线组合;开头不能是数字
		标识符不能是关键字
		标识符区分大小写
	
	变量:程序运行期间可以改变的量
		变量起名要遵循标识符命名规范
		{}内部的变量不能重复定义
		变量使用前必须先定义,定义时必须有相应的数据类型
	
	常量:程序运行期间不可以改变的量

	变量的定义和声明的区别:
		int a = 10;		//定义,建立存储空间
		extern int b;	//声明,没有建立存储空间

2)数据类型
	数据类型当做模具,变量当做根据模具创建的实物
	
3)进制
	所谓X进制,就逢X进一
	
	1111(8421) = 15
	
	计算机几乎都是二进制系统
	
	8进制一位对应2进制的三为;16进制的一位对应2进制的四位
	
	计算机存储最小单位为1字节
		1字节 = 8位
		1K = 1024字节
		1M = 1024K
		1G = 1024M
		
		1Kb = 1024 * bit,数据传输是习惯以"位(bit)"为单位
		1KB = 1024 * Byte = 1024 * 8 bit,数据存储是习惯以"字节(Byte)"为单位

4)原码反码补码
	原码反码补码特点:
		原码:原始2进制;最高位为符号位,正数为0,负数为1
		反码:正数的原码反码一样;负数的反码,符号位不变,其他位取反(0变1,1变0)
		补码:计算机存储数据以补码的方式存储
			正数的原码反码补码一样;负数的补码,为负数的反码+1

	示例:
		站在用户角度,我们操作的都是原码(%d,%u输出)
		站在计算机角度,看到的都是补码(主要解决负数存储问题)
		
	原码-->补码
		求原码,最高位为符号位
		求反码,最高位不变,其他位取反
		反码+1,就是补码
		
	补码-->原码
		求补码的反码
		求出的反码+1,就是原码
		
	有符号位和无符号位的区别:
		有符号位:最高位为符号位,为1,说明是负数,计算机以补码的方式存储
		无符号位:最高位为数值的一部分,不可能是负数
		
	char类型的范围:
		有符号范围:正数:0000 0000 ~ 0111 1111(0到127)
				   负数:1000 0000 ~ 1111 1111(-0到-127,-0当做-128,-1到-128)
					-128 ~ 127
		无符号范围:0000 0000 ~ 1111 1111(0到255)

	变量越界

5)字符类型
	char的本质就是1字节大小的整型
	字符是只有一个字母,转义字符除外(反斜杠\)
	ASCII码:一个字符对应一个数字,man ascii
	用字符和用ASCII码完全等价
	
	字符'\0'和数字0等价




day005课堂记录

当用户通过scanf输入字符时,编译器默认把输出的内容先放在一块内存中(缓冲区),
scanf()自动在缓冲区读完内容
scanf("%c", &a);//只读一个字符
假设输入t\n
1)第1次把t取走,留下\n还在缓冲区
2)第2次scanf,由于缓冲区还有内容,所以直接取内容,无需输入


1)逻辑真假
非0就是真,通常以1表示
0就是假,一定以0表示

2)常犯错误
3 < a < 10
3 < a && a < 10

3)短路规则(优化)
||,左边为真,右边不执行
&&,左边为假,右边不执行



判断一个数,是个位,十位,百位,千位(010_if_practice.c)

通过while实现1+2+3+...+100(014_while_practice.c)



IDE调试代码
1. 设断点<F9>
2. 调试运行<F5>

<F10>跳过函数
<F11>进入函数



死循环

//{}可以不写,不写只有第一个语句属于循环,建议写
while(1)
{

}

//{}必须
do
{

}while(1);

//{}可以不写,不写只有第一个语句属于循环,建议写
for(; ;)
{

}




循环的嵌套: 任何一个循环的内部可以调用其他的循环

while()
{
	while()
	{
		do
		{
			for()
			{
				while()
				{
				
				}
			}
		}while();
	}
}

int i = 0;
int j = 0;
int num = 0;

/*
1. i = 0;
2. 判断 i < 10 的条件,条件为真,执行for(; i < 10; ++i){}内容
					  条件为假,跳出循环
3. 执行{}
*/
for(i = 0; i < 10; ++i)
{
	for(j = 0; j < 10; ++j)
	{
		num++;
	}
}





break的作用:
1.跳出switch语句
2.跳出循环
3.如果有多个循环,跳出最近的内循环

continue属于循环

goto任意地方都能使用,无条件跳转,不要滥用
只能跳转到同一个作用域












